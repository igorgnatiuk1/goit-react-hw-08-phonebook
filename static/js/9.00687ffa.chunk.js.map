{"version":3,"sources":["components/RegistrationForm/RegistrationForm.js","pages/RegistrationPage.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","RegistrationForm","classes","history","useHistory","useState","name","setName","email","setEmail","password","setPassword","useSignupUserMutation","createUser","handleChange","target","value","className","noValidate","autoComplete","onSubmit","e","preventDefault","unwrap","then","toast","success","setInterval","push","catch","error","TextField","required","id","label","type","onChange","variant","Button","color","size","RegistrationPage"],"mappings":"oRAaMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACF,uBAAwB,CACpBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,aAKJ,SAASC,IACpB,IAAMC,EAAUR,IACVS,EAAUC,cAEhB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEA,EAAqBC,cAAdC,EAAP,oBAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACpC,OAAQV,GACJ,IAAK,OACD,OAAOC,EAAQS,GACnB,IAAK,QACD,OAAOP,EAASO,GACpB,IAAK,WACD,OAAOL,EAAYK,GACvB,QACI,SA6BZ,OACI,qCACI,cAAC,IAAD,IACA,iDACA,8BACI,uBACIC,UAAWf,EAAQL,KACnBqB,YAAU,EACVC,aAAa,MACbC,SA5BK,SAAAC,GACjBA,EAAEC,iBAEFT,EAAW,CAAEP,OAAME,QAAOE,aACrBa,SACAC,MAAK,WACFC,IAAMC,QAAQ,wCAEdC,aAAY,WACRxB,EAAQyB,KAAK,YACd,QAENC,OAAM,WACHJ,IAAMK,MAAN,8BAAmCxB,EAAnC,0BAlBRC,EAAQ,IACRE,EAAS,IACTE,EAAY,KA2BJ,UAMI,cAACoB,EAAA,EAAD,CACIC,UAAQ,EACRC,GAAG,gBACHC,MAAM,YACNC,KAAK,OACL7B,KAAK,OACLU,MAAOV,EACP8B,SAAUtB,EACVuB,QAAQ,WAGZ,cAACN,EAAA,EAAD,CACIC,UAAQ,EACRC,GAAG,kBACHC,MAAM,SACNC,KAAK,QACL7B,KAAK,QACLU,MAAOR,EACP4B,SAAUtB,EACVuB,QAAQ,WAGZ,cAACN,EAAA,EAAD,CACIE,GAAG,wBACHC,MAAM,WACNC,KAAK,WACL7B,KAAK,WACLU,MAAON,EACP0B,SAAUtB,EACVuB,QAAQ,WAGZ,8BACI,cAACC,EAAA,EAAD,CACID,QAAQ,YACRE,MAAM,UACNJ,KAAK,SACLK,KAAK,QAJT,+BC/GT,SAASC,IACpB,OAAO,cAACxC,EAAD","file":"static/js/9.00687ffa.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { useSignupUserMutation } from '../../redux/user/userApi';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function RegistrationForm() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [createUser] = useSignupUserMutation();\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        switch (name) {\r\n            case 'name':\r\n                return setName(value);\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'password':\r\n                return setPassword(value);\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        createUser({ name, email, password })\r\n            .unwrap()\r\n            .then(() => {\r\n                toast.success('Registration is successes! Now LogIn');\r\n\r\n                setInterval(() => {\r\n                    history.push('/login');\r\n                }, 2000);\r\n            })\r\n            .catch(() => {\r\n                toast.error(`Bad Request or user ${name} is already exist!`);\r\n            });\r\n\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <h2 >Please, sign up</h2>\r\n            <div >\r\n                <form\r\n                    className={classes.root}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <TextField\r\n                        required\r\n                        id=\"required-name\"\r\n                        label=\"Your Name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        variant=\"filled\"\r\n                    />\r\n\r\n                    <TextField\r\n                        required\r\n                        id=\"filled-required\"\r\n                        label=\"E-mail\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        variant=\"filled\"\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"filled-password-input\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        variant=\"filled\"\r\n                    />\r\n\r\n                    <div >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            size=\"large\"\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}","\r\nimport RegistrationForm from '../components/RegistrationForm/RegistrationForm';\r\n\r\nexport default function RegistrationPage() {\r\n    return <RegistrationForm />;\r\n}"],"sourceRoot":""}